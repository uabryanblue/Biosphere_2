---
title: "LICOR Data Processing"
author: "Bryan Blue"
e-mail: 'bryanblue@arizona.edu'
date: "Last Generated: `r Sys.Date()`"
execute:
  echo: false
format: 
  html:
    code-fold: true
    fig-width: 8
    fig-height: 6
  pdf:
    fig-width: 7
    fig-height: 5
---

```{r setup, include=FALSE}
#| echo: false
knitr::opts_chunk$set(echo = TRUE)
require(tidyverse)
library(dplyr)
library(lubridate)
require(tidyr)
library(ggplot2)
library(here)

# start in the current project directory
# this ensures relative paths will work
# independent of the location the script
here::here()
# https://www.regextester.com/ for regex checking

# constants to data paths
<<<<<<< HEAD
DATARAW <- "data_raw" 
DATACLEAN <- "data_clean"
DATAUSER <- "data_user"

=======
DATARAW <- here("data_raw/")
DATACLEAN <- here("data_clean/")
DATAUSER <- here("data_user/")
>>>>>>> 92db21d52c853555ba591fb015319cb73491590e
```


```{r test_graph_trt}

plot_plant_line <- function(finaldata, plantid, fname, plantvar) {

  # NOTE for testing only
# plot_plant_line(finaldata, 
#                 plantid <- 2
#                 fname <- "2023-11-17-1144_logdata-tc-heat"
#                 plantvar <- "GasEx_gsw"  
#   
# print(paste(plantid, fname, plantvar, sep=", "))


  plant <- finaldata[finaldata$Filenames_filename == fname &
                       finaldata$Data_plant_id == plantid &
                       (finaldata$Data_leaftype == "Treatment" |
                          finaldata$Data_leaftype == "Control" |
                          finaldata$Data_leaftype == "Reference")
                     , ]
  
if (nrow(plant) > 0) {
  
plot <- ggplot() +
    # geom_point(data = final_data, 
    geom_line(data=plant, 
               aes(x = SysObs_obs, y = get(plantvar), color = Data_leaftype)) +
    # geom_line(data = final_data, aes(x = SysObs_date, y = GasEx_gsw, color = "GasEx_gsw")) +
    # geom_line(data = final_data, aes(x = date, y = temperature, color = sensor_id)) +
    # geom_line(data = final_data, aes(x = date, y = temperature, color = sensor_id)) +
    # geom_line(data = final_data, aes(x = date, y = temperature, color = sensor_id)) +
    # geom_line(data = final_data, aes(x = date, y = TEMP_THREE_FOOT_HEIGHT, color = "CEAC")) +
    ggtitle(paste("LICOR Test Graph ", fname)) +
    xlab("SysObs_obs") +
    ylab(plantvar) +
    # scale_y_continuous(limits=c(0.0, 0.2), breaks=c(0, 0.1, 0.2, 0.5))   +
    # scale_x_datetime(date_labels = ("%M:%S"),
    #     date_breaks = "10 sec",  expand = expansion(0)) +
    theme(axis.text.x=element_text(angle=60, hjust=1))
}  
return(plot)



  
  
# ggplot(plant, aes(x = SysObs_obs , y = GasEx_gsw, color = Data_leaftype)) + 
#   geom_boxplot(outlier.colour="red",
#                 outlier.size=4) +
#   ggtitle("LICOR GasEx gsw - 2024-02-14-1206_logdata_ca_heat_lvl3") +
#     xlab("Leaf") +
#     ylab("GasEx_gsw") 




ggplot(plant, aes(x = SysObs_obs , y = get(plantvar), color = Data_leaftype)) +
  geom_line(outlier.colour="red",
                outlier.size=4) +
  ggtitle("LICOR GasEx gsw - 2024-02-14-1206_logdata_ca_heat_lvl3") +
    xlab("Leaf") +
    ylab("GasEx_gsw")



}

# ggplot() +
#     # geom_point(data = final_data,
#     geom_point(data=subset(final_data, data_group=="group1"),
#                aes(x = SysObs_date, y = GasEx_gsw, color = "GasEx_gsw")) +
#     # geom_line(data = final_data, aes(x = SysObs_date, y = GasEx_gsw, color = "GasEx_gsw")) +
#     # geom_line(data = final_data, aes(x = date, y = temperature, color = sensor_id)) +
# #     # geom_line(data = final_data, aes(x = date, y = temperature, color = sensor_id)) +
# #     # geom_line(data = final_data, aes(x = date, y = temperature, color = sensor_id)) +
# #     # geom_line(data = final_data, aes(x = date, y = TEMP_THREE_FOOT_HEIGHT, color = "CEAC")) +
# #     ggtitle("LICOR Test Graph - GasEx gsw - REFERENCE LEAF") +
# #     xlab("SysObs_date") +
# #     ylab("GasEx_gsw") +
# #     scale_y_continuous(limits=c(0.0, 0.2), breaks=c(0, 0.1, 0.2, 0.5)) +
# #     scale_x_datetime(date_labels = ("%M:%S"),
# #         date_breaks = "10 sec",  expand = expansion(0)) +
# #     theme(axis.text.x=element_text(angle=60, hjust=1))
```

NOTE: Look into these for help with graph layout
# facet# TODO !!!!
# patchwork TODO !!!!
# wrap plot, axis collect

```{r}

finaldata <- read_csv(here(DATAUSER,"final_raw_data.csv"), 
                      col_names = TRUE, 
                      show_col_types = FALSE) 

finaldata <- rename(finaldata,c("Data_remarks" = "Data_remarks.x", "Data_plant_id" = "Data_plant_id.x", "Data_leaftype" = "Data_leaftype.x"))

# finaldata <- type.convert(finaldata) 
# finaldata[finaldata < 0] <- NA
# finaldata <- na.omit(finaldata)


# finaldata <- type.convert(finaldata) 
# 
# finaldata %>% mutate_all(~ na_if(., . < 0))

# RAW DATA PLOTS
for (FileName in unique(finaldata$Filenames_filename)) {
  # print(paste("Generate Plot: ", FileName, " PlantID: ", 
  print(FileName)
  # plot one days readings as a line chart
  myplot <- plot_plant_line(finaldata, finaldata[finaldata$Filenames_filename==FileName,]$Data_plant_id, FileName, "GasEx_A")
  print(myplot)
  
# mean(finaldata[finaldata$Filenames_filename == "2023-11-22-1138_logdata" & finaldata$Data_leaftype == "Treatment",]$GasEx_A)

  i = 0
  av <- data.frame(matrix(ncol = 5, nrow = 0))
  colnames(av) <- c('filename', 'mRef', 'mTrt', 'mCnt', 'index')

  for (FileName in unique(finaldata$Filenames_filename)) {
    i = i + 1
    # plant <- finaldata[finaldata$Filenames_filename == FileName ,]
    
    mr <- mean(finaldata[finaldata$Filenames_filename == FileName & finaldata$Data_leaftype == "Reference",]$GasEx_A)
    mt <- mean(finaldata[finaldata$Filenames_filename == FileName & finaldata$Data_leaftype == "Treatment",]$GasEx_A)
    mc <- mean(finaldata[finaldata$Filenames_filename == FileName & finaldata$Data_leaftype == "Control",]$GasEx_A)

    # add in all the averages from each unique set of readings
    av[nrow(av) + 1,] = c(FileName, mr, mt, mc, i)
  }
  
  

}

# correct the types for graphing
# TODO these may not align with the original type conversion in 0_ 
av <- type.convert(av)
av[av < 0] <- NA

# av %>% mutate_all(~ na_if(., . < 0), as.is = TRUE)
# TODO is this the best way to do things?
# av <- type.convert(av, as.is = TRUE)
# av %>% mutate_all(~ na_if(., . < 0))
  # av <- na.omit(av)

  
  
ggplot() +
    # geom_line(data = av, aes(x = index, y = mRef, color = "Reference")) +
    # geom_line(data = av, aes(x = index, y = mTrt, color = "Treatment")) +
    # geom_line(data = av, aes(x = index, y = mCnt, color = "Control")) +
    geom_point(data = av, aes(x = index, y = mRef, color = "Reference")) +
    geom_point(data = av, aes(x = index, y = mTrt, color = "Treatment")) +
    geom_point(data = av, aes(x = index, y = mCnt, color = "Control")) +
    # geom_line(data = final_data, aes(x = date, y = temperature, color = sensor_id)) +
    # geom_line(data = final_data, aes(x = date, y = temperature, color = sensor_id)) +
    # geom_line(data = final_data, aes(x = date, y = temperature, color = sensor_id)) +
    # geom_line(data = final_data, aes(x = date, y = TEMP_THREE_FOOT_HEIGHT, color = "CEAC")) +
    ggtitle("LICOR Test mean Graph - A") +
    xlab("index") +
    ylab("A avg")



ggplot() +
    # geom_line(data = av, aes(x = index, y = mRef, color = "Reference")) +
    # geom_line(data = av, aes(x = index, y = mTrt, color = "Treatment")) +
    # geom_line(data = av, aes(x = index, y = mCnt, color = "Control")) +
    geom_point(data = finaldata, aes(x = SysObs_obs , y = GasEx_A, color = Data_leaftype)) +
    # geom_point(data = finaldata, aes(x = index, y = mTrt, color = "Treatment")) +
    # geom_point(data = finaldata, aes(x = index, y = mCnt, color = "Control")) +
    # geom_line(data = final_data, aes(x = date, y = temperature, color = sensor_id)) +
    # geom_line(data = final_data, aes(x = date, y = temperature, color = sensor_id)) +
    # geom_line(data = final_data, aes(x = date, y = temperature, color = sensor_id)) +
    # geom_line(data = final_data, aes(x = date, y = TEMP_THREE_FOOT_HEIGHT, color = "CEAC")) +
  # scale_y_continuous(limits=c(0.0, 12.0), breaks=c(0, 0.1, 0.2, 0.5)) +
  scale_y_continuous(limits=c(0.0, 12.0)) +
    ggtitle("LICOR Test mean Graph - A") +
    xlab("index") +
    ylab("A avg")


  p2 <- filter(finaldata, Data_plant_id == 2 & (Data_leaftype == "Treatment" | Data_leaftype == "Control" | Data_leaftype == "Reference"))
    

  all <-  ggplot() +
    # geom_line(data = av, aes(x = index, y = mRef, color = "Reference")) +
    # geom_line(data = av, aes(x = index, y = mTrt, color = "Treatment")) +
    # geom_line(data = av, aes(x = index, y = mCnt, color = "Control")) +
    geom_boxplot(data = p2, aes(x = SysObs_obs , y = GasEx_A, color = Data_leaftype)) +
    # geom_point(data = finaldata, aes(x = index, y = mTrt, color = "Treatment")) +
    # geom_point(data = finaldata, aes(x = index, y = mCnt, color = "Control")) +
    # geom_line(data = final_data, aes(x = date, y = temperature, color = sensor_id)) +
    # geom_line(data = final_data, aes(x = date, y = temperature, color = sensor_id)) +
    # geom_line(data = final_data, aes(x = date, y = temperature, color = sensor_id)) +
    # geom_line(data = final_data, aes(x = date, y = TEMP_THREE_FOOT_HEIGHT, color = "CEAC")) +
  # scale_y_continuous(limits=c(0.0, 12.0), breaks=c(0, 0.1, 0.2, 0.5)) +
  scale_y_continuous(limits=c(0.0, 10)) +#, breaks=c(0, 2.5, 3.0, 3.5)) +
    ggtitle("LICOR All Observations for Elevation 2 on A") +
    xlab("index") +
    ylab("A")
 
  all

  p3 <- filter(finaldata, Data_plant_id == 3 & (Data_leaftype == "Treatment" | Data_leaftype == "Control" | Data_leaftype == "Reference"))
  
  
  all <-  ggplot() +
    # geom_line(data = av, aes(x = index, y = mRef, color = "Reference")) +
    # geom_line(data = av, aes(x = index, y = mTrt, color = "Treatment")) +
    # geom_line(data = av, aes(x = index, y = mCnt, color = "Control")) +
    geom_boxplot(data = p3, aes(x = SysObs_obs , y = GasEx_A, color = Data_leaftype)) +
    # geom_point(data = finaldata, aes(x = index, y = mTrt, color = "Treatment")) +
    # geom_point(data = finaldata, aes(x = index, y = mCnt, color = "Control")) +
    # geom_line(data = final_data, aes(x = date, y = temperature, color = sensor_id)) +
    # geom_line(data = final_data, aes(x = date, y = temperature, color = sensor_id)) +
    # geom_line(data = final_data, aes(x = date, y = temperature, color = sensor_id)) +
    # geom_line(data = final_data, aes(x = date, y = TEMP_THREE_FOOT_HEIGHT, color = "CEAC")) +
  # scale_y_continuous(limits=c(0.0, 12.0), breaks=c(0, 0.1, 0.2, 0.5)) +
  scale_y_continuous(limits=c(0.0, 10)) +#, breaks=c(0, 2.5, 3.0, 3.5)) +
    ggtitle("LICOR All Observations for Elevation 3 on A") +
    xlab("index") +
    ylab("A")
 
  all

  p2 <- filter(finaldata, Data_plant_id == 2 & (Data_leaftype == "Treatment" | Data_leaftype == "Control" | Data_leaftype == "Reference"))
    

  all2 <-  ggplot() +
    # geom_line(data = av, aes(x = index, y = mRef, color = "Reference")) +
    # geom_line(data = av, aes(x = index, y = mTrt, color = "Treatment")) +
    # geom_line(data = av, aes(x = index, y = mCnt, color = "Control")) +
    geom_boxplot(data = p2, aes(x = SysObs_obs , y = GasEx_A, color = Data_leaftype)) +
    # geom_point(data = finaldata, aes(x = index, y = mTrt, color = "Treatment")) +
    # geom_point(data = finaldata, aes(x = index, y = mCnt, color = "Control")) +
    # geom_line(data = final_data, aes(x = date, y = temperature, color = sensor_id)) +
    # geom_line(data = final_data, aes(x = date, y = temperature, color = sensor_id)) +
    # geom_line(data = final_data, aes(x = date, y = temperature, color = sensor_id)) +
    # geom_line(data = final_data, aes(x = date, y = TEMP_THREE_FOOT_HEIGHT, color = "CEAC")) +
  # scale_y_continuous(limits=c(0.0, 12.0), breaks=c(0, 0.1, 0.2, 0.5)) +
  scale_y_continuous(limits=c(0.0, 10)) +#, breaks=c(0, 2.5, 3.0, 3.5)) +
    ggtitle("Test LICOR Level 2 Values Box Plot - A") +
    xlab("index") +
    ylab("A")
  
  all2

  
    p3 <- filter(finaldata, Data_plant_id == 3 & (Data_leaftype == "Treatment" | Data_leaftype == "Control" | Data_leaftype == "Reference"))
    
<<<<<<< HEAD
=======
  p2 <- filter(finaldata, Data_plant_id == 2 & (Data_leaftype == "Treatment" | Data_leaftype == "Control" | Data_leaftype == "Reference"))
    

  all2 <-  ggplot() +
    # geom_line(data = av, aes(x = index, y = mRef, color = "Reference")) +
    # geom_line(data = av, aes(x = index, y = mTrt, color = "Treatment")) +
    # geom_line(data = av, aes(x = index, y = mCnt, color = "Control")) +
    geom_boxplot(data = p2, aes(x = SysObs_obs , y = GasEx_A, color = Data_leaftype)) +
    # geom_point(data = finaldata, aes(x = index, y = mTrt, color = "Treatment")) +
    # geom_point(data = finaldata, aes(x = index, y = mCnt, color = "Control")) +
    # geom_line(data = final_data, aes(x = date, y = temperature, color = sensor_id)) +
    # geom_line(data = final_data, aes(x = date, y = temperature, color = sensor_id)) +
    # geom_line(data = final_data, aes(x = date, y = temperature, color = sensor_id)) +
    # geom_line(data = final_data, aes(x = date, y = TEMP_THREE_FOOT_HEIGHT, color = "CEAC")) +
  # scale_y_continuous(limits=c(0.0, 12.0), breaks=c(0, 0.1, 0.2, 0.5)) +
  scale_y_continuous(limits=c(0.0, 10)) +#, breaks=c(0, 2.5, 3.0, 3.5)) +
    ggtitle("Test LICOR Level 2 Values Box Plot - A") +
    xlab("index") +
    ylab("A")
  
  all2

  
    p3 <- filter(finaldata, Data_plant_id == 3 & (Data_leaftype == "Treatment" | Data_leaftype == "Control" | Data_leaftype == "Reference"))
    
>>>>>>> 92db21d52c853555ba591fb015319cb73491590e

  all3 <-  ggplot() +
    # geom_line(data = av, aes(x = index, y = mRef, color = "Reference")) +
    # geom_line(data = av, aes(x = index, y = mTrt, color = "Treatment")) +
    # geom_line(data = av, aes(x = index, y = mCnt, color = "Control")) +
    geom_boxplot(data = p3, aes(x = SysObs_obs , y = GasEx_A, color = Data_leaftype)) +
    # geom_point(data = finaldata, aes(x = index, y = mTrt, color = "Treatment")) +
    # geom_point(data = finaldata, aes(x = index, y = mCnt, color = "Control")) +
    # geom_line(data = final_data, aes(x = date, y = temperature, color = sensor_id)) +
    # geom_line(data = final_data, aes(x = date, y = temperature, color = sensor_id)) +
    # geom_line(data = final_data, aes(x = date, y = temperature, color = sensor_id)) +
    # geom_line(data = final_data, aes(x = date, y = TEMP_THREE_FOOT_HEIGHT, color = "CEAC")) +
  # scale_y_continuous(limits=c(0.0, 12.0), breaks=c(0, 0.1, 0.2, 0.5)) +
  scale_y_continuous(limits=c(0.0, 10)) +#, breaks=c(0, 2.5, 3.0, 3.5)) +
    ggtitle("Test LICOR Level 3 Values Box Plot - A") +
    xlab("index") +
    ylab("A")
  
  all3
<<<<<<< HEAD

=======
>>>>>>> 92db21d52c853555ba591fb015319cb73491590e
 
```


