---
title: "LICOR Data Processing"
author: "Bryan Blue"
e-mail: 'bryanblue@arizona.edu'
date: "Last Generated: `r Sys.Date()`"
execute:
  echo: false
format: 
  html:
    code-fold: true
    fig-width: 8
    fig-height: 6
  pdf:
    fig-width: 7
    fig-height: 5
---

```{r setup, include=FALSE}
#| echo: false
knitr::opts_chunk$set(echo = TRUE)
require(tidyverse)
library(dplyr)
library(lubridate)
require(tidyr)
# require(readxl)
library(ggplot2)
library(here)

# start in the current project directory
# this ensures relative paths will work
# independent of the location the script is run
here::here()
```

## 01_load_LICOR_logs  
Load LICOR text logs

```{r load}
#| echo: true

load_data_chunks <- function(filename) {
  con <- file(filename, "rt")
  print("start")
  i = 0 # used to specify which group of data is being read
  dataLines <- data.frame(matrix(ncol = 1, nrow = 0))
  colnames(dataLines) <- c("original")
  
    while (length(oneLine <- readLines(con, n = 1, skipNul = TRUE, warn = FALSE)) > 0) {
      # print(oneLine)
      if (str_detect(oneLine, regex("\\[Data\\]"))) {
        # print("We found data start")
        
        i = i + 1
        groupNumber = paste("group",i, sep = "")
        # j = 1
        
        # these three groups appear after [Data] in the file
        dataGroups <- paste("data_group", readLines(con, n = 1, skipNul = TRUE, warn = FALSE), sep = "\t")
        dataVars   <- paste("data_group", readLines(con, n = 1, skipNul = TRUE, warn = FALSE), sep = "\t")
        dataUnits  <- paste("data_group", readLines(con, n = 1, skipNul = TRUE, warn = FALSE), sep = "\t")
        
        # create an empty list to store all of the data records
        # read lines until it is not longer a data line


        while (length(dataLine <- readLines(con, n = 1, skipNul = TRUE, warn = FALSE)) > 0) {
          # print(dataLine)
          # lines starts with and integer record number and tab
          if (str_detect(dataLine, regex("^[0-9]?\t"))) { 
            finalString <- paste(groupNumber, dataLine, sep = "\t")
            dataLines[nrow(dataLines) + 1,] = finalString

            # j = j + 1
          } else {
            break
          }
        }
      }
    } 

  print("stop")
  close(con) 

  return(list(dataGroups, dataUnits, dataVars, dataLines))
  
}

# this will not work for multiple files without the structure, columns
# create df for each of the chunks of information
output <- load_data_chunks("data_raw/2023-11-15-b2trf/2023-11-15-1148_logdata")
groupsdf <- data.frame(do.call('rbind',strsplit(as.character(output[[1]]),'\t',fixed=TRUE)))
unitsdf <- data.frame(do.call('rbind',strsplit(as.character(output[[2]]),'\t',fixed=TRUE)))
varsdf <- data.frame(do.call('rbind',strsplit(as.character(output[[3]]),'\t',fixed=TRUE)))
valuesdf <- data.frame(do.call('rbind',strsplit(as.character(output[[4]][,1]),'\t',fixed=TRUE)))

write_excel_csv(groupsdf, "data_raw/2023-11-15-b2trf/new.txt", append = TRUE, col_names = FALSE)
write_excel_csv(unitsdf, "data_raw/2023-11-15-b2trf/new.txt", append = TRUE, col_names = FALSE)
write_excel_csv(varsdf, "data_raw/2023-11-15-b2trf/new.txt", append = TRUE, col_names = FALSE)
write_excel_csv(valuesdf, "data_raw/2023-11-15-b2trf/new.txt", append = TRUE, col_names = FALSE)

```
