---
title: 'Test of Aspirated Sensor 2023-10-17'
author: "Bryan Blue"
e-mail: 'bryanblue@arizona.edu'
date: "Last Generated: `r Sys.Date()`"
execute:
  echo: false
format: 
  html:
    code-fold: true
    fig-width: 8
    fig-height: 6
  pdf:
    fig-width: 7
    fig-height: 5
---

## Experimental Temperature, Humidity, Pressure Sensor Calibration  
### Experiment Location: The University of Arizona, Tucson, Controlled Environment Agriculture Center, Greenhouse "C"  
Four experimental BME280 temperature, humidity, pressure aspirated sensors (THP sensors) were placed adjacent to an existing CEAC Vaisala HMP60 aspirated sensor (CEAC sensor). The CEAC sensor had been recently calibrated but on an unknown specific date. The THP sensors were covered with an expanded foam packaging packet that gave at least 2 inches of insulation on top as well as part way down the sides to shield them from direct sunlight. The THP sensors will be used in a shaded, outdoor conditions, not a greenhouse environment. This insulation reduces the direct sunlight and associated absorbed engery by the case. The goal is to compare how well the THP sensors respond in relation to the CEAC sensor under the same conditions. This can then be used to create a calibration equation for each of the four THP sensors.

The THP sensors had aspirated readings taken from a Hiletgo BME280 breakout board inside an aspiration chamber. Specifications for the BME280 sensor can be found here: http://www.hiletgo.com/ProductDetail/1953483.html. Measurements were recorded for Temperature (C), Relative Humidity (%), and Pressure (hPa) at 15 minute intervals of 00,15,30,45 of each hour. Each reading had a variable amount of seconds past the boundary due to reading processing timing that did not affect reading accuracy.  

Readings were taken every 15,000 ms (15 seconds) and averaged over 15 minutes. That value was then assembled into a CSV data record that was transmitted to a data logger and recorded to a microSD card. These four CSV log files were collected for this analysis.  

The CEAC supplied a Microsoft Excel (XLSX) file with the CEAC sensor data for this analysis.  

```{r setup}
#| include: false

knitr::opts_chunk$set(echo = TRUE)

library(ggplot2)
library(here)
library(dplyr)
library(lubridate)
library(readr)
library(readxl)
library(ggpmisc) # stats on ggplot graphs
library(ggfortify) # graphing QQ, residuals with ggplots
library(gridExtra) # quick layout of multiple graphs


# start in the current project directory
# this ensures relative paths will work
# independent of the location the script is run
here::here()
```

## Location Within Greenhouse
**Lowest CEAC Sensor Above an Existing Experiments Drainage Tray at Approximately 3 feet (\~1 m) From the Ground**  
**Midpoint in The North/South Direction**  
**One Quarter of The Width From The West Side**  

### Load Data

**THP Experiment Sensors**

Each sensors <filename>.log file had previously recorded data at the top of the file. These lines are skipped until the first record of this test data. Record numbering in this data starts at 1.

Date/Time values start on 2023-10-17 at 16:15:xx or 16:30:xx with the start time variation due to differing sensor start up times.

```{r data_load_THP}

# reads in the THP sensor log file with correct field names and types
load_THP_data <- function(f_name, line_skip=0) {
  df_name <- read_csv(f_name,
  skip = line_skip,
  col_names = c(
    "date", # logger date/time log_date
    "record_number",
    "sensor_date", # sensor date/time date
    "mac", # MAC address of the sensor
    "temperature",
    "rh",
    "pressure",
    "read_count"),
  col_types = cols(date = col_datetime(format = "%Y-%m-%d %H:%M:%S"), 
    record_number = col_integer(),
    sensor_date = col_datetime(format = "%Y-%m-%d %H:%M:%S"),
    mac = col_character(),
    temperature = col_double(),
    rh = col_double(),
    pressure = col_double(),
    read_count = col_integer())
  )
  return(df_name)
}

# go to project directory
invisible(here::here())

# each log from each sensor from the test, name with last 4 characters of log name
THP_log_E8D2 <- load_THP_data("raw_data/20231019_THP_TRC_last/CLIMATE_C45BBEE4FE08_48E72952E8D2.log", 7)
THP_log_672E <- load_THP_data("raw_data/20231019_THP_TRC_last/CLIMATE_C45BBEE4FE08_48E72953672E.log", 4)
THP_log_2848 <- load_THP_data("raw_data/20231019_THP_TRC_last/CLIMATE_C45BBEE4FE08_485519DF2848.log", 6)
THP_log_0035 <- load_THP_data("raw_data/20231019_THP_TRC_last/CLIMATE_C45BBEE4FE08_C45BBEE50035.log", 5)


```

**CEAC Campbell Scientific Data**  
An Excel XLSX file was supplied by the CEAC that contained data from the CEAC sensor. Raw data from 7/12/2023 14:15 through 11/2/2023 14:15 was included in the file.  

Values of "NAN" and "-7999" in the data were mapped to native "na" values for use in R.

TIMESTAMP column was changed to "date" to allow for matching with the THP sensor data. It was also converted to a standard POSIXct date/time format.  
The first 4 rows were removed as they are Campbell Scientific header information that is not needed. It's log file starts with record number 0.  

```{r data_load_CEAC}

Campbell_Data <- read_excel("raw_data/2 Nov Campbell Data.xlsx", 
    na = c("NAN", "-7999"),
    skip = 4, # skip the Campbell Scientific header information
  col_names = c(
    "date", # log date/time
    "record_number",
    "bat_volt_Min",
    "PPFD_MERISTEM_HEIGHT_Avg",
    "PPFD_THIRD_BASAL_NODE_ZONE_Avg",
    "PPFD_SIX_INCHES_ABOVE_CANOPY_Avg",
    "PPFD_MID_CANOPY_Avg",
    "TEMP_THREE_FOOT_HEIGHT",
    "RH_THREE_FOOT_HEIGHT",
    "TEMP_SIX_FOOT_HEIGHT",
    "RH_SIX_FOOT_HEIGHT",
    "TEMP_CENTER_BENCHES_6_FOOT",
    "RH_CENTER_BENCHES_6_FOOT"),
  col_types = c("date", "numeric", "numeric", "numeric",
                "numeric", "numeric", "numeric", "numeric",
                "numeric", "numeric", "numeric", "numeric", "numeric")
  
)


```

## Data Wrangling

All dates are standardized to POSIXct. YYYY-MM-DD HH:MM:SS  

There was a difference in the clock values between the THP sensors and CEAC sensor. The clocks were not synchronized at the beginning of the test. Through trial and error it was determined that the difference was ~30 minutes. This is consistent with previous tests at this location. A 30 minute shif was applied to the THP sensor data to align it with the CEAC sensor data.

The THP sensor was set to record on 15 minute boundaries but had records where they were a time boundary over the expected value. This was sporadic and appeared to have cycles of time jumps forward by one boundary, and then would correct itself. This caused some duplication of the dates/times. These were averaged together in the THP data to normalize it to 15 minute boundaries.  
The Cambpell Scientific logs rounded the timestamp (date fields) to the minutes, so the THP sensor data had the seconds set to 0 values to match this format.

```{r data_wrangle}

combine_data <- function(sensor_df, sensor_name) {
   
  # set one log to temp for temporary testing of time averaging
  temp <- sensor_df
  second(temp$date) <- 0 
  temp$date <- as.POSIXct(floor(((as.numeric(temp$date)) + (30*60))), origin = "1970-01-01")
  
  # combine experimental sensor data into 15 minute boundaries
  dur <- 15 * 60
  temp$new_date <- as.POSIXct(floor(as.numeric(temp$date) / 
             (dur))*(dur), origin = "1970-01-01")

  # add the time difference from the time the sensor sent the time the data logger recorded it
  # should be 0 to 1 second
  temp$diff <- temp$sensor_date - temp$date
  ################
  hourly <- temp
  # combine experimental sensor data into 60 minute boundaries
  # change number on left of * to minutes as needed 15, 30, ...
  hourly$date <- floor(((as.numeric(hourly$date)) - 15*60 )/ (15*60)) * (15 * 60)
  # hourly$date <- floor(((as.numeric(hourly$date)) - 60*60 )/ (60*60)) * (60 * 60)
  hourly$date <- as.POSIXct(hourly$date, origin='1970-01-01')
  
  hourRH <- aggregate(rh ~ date, hourly, mean)
  hourT <- aggregate(temperature ~ date, hourly, mean)
  hourP <- aggregate(pressure ~ date, hourly, mean)
  
  hourStats <- inner_join(hourRH, hourT, by='date')
  hourStats <- inner_join(hourStats, hourP, by='date')
  hourStats$sensor_id <- sensor_name

  # create final table for analysis with CEAC and TRH sensor data
  finalStats <- inner_join(Campbell_Data, hourStats, by='date')
  ###########
  
  return(finalStats)

}

```
Clean logs were created for each the four THP sensor logs. These were then individually joined to the CEAC sensor data on the date. This resulted in four merged logs of each THP sensor data and CEAC sensor data for analysis.  

```{r create_cleaned_logs}
# Data Frame Names
#   THP_log_E8D2
#   THP_log_672E
#   THP_log_2848
#   THP_log_0035

# create the appropriate final logs and identify with a sensor_id
final_THP_log_E8D2 <- combine_data(THP_log_E8D2, "E8D2")
final_THP_log_672E <- combine_data(THP_log_672E, "672E")
final_THP_log_2848 <- combine_data(THP_log_2848, "2848")
final_THP_log_0035 <- combine_data(THP_log_0035, "0035")
```

## RESULTS

**NOTE** Starting October 18th around 10:00 am there appears to be an anomaly with excessive temperatures and low humidity. This normally indicates failure of the wet pad cooling system where water is not flowing over the pad. This needs confirmed, but does give some insight into how the sensors respond to higher temperatures and lower humidity levels. This data helps in the overall analysis when deriving the calibration curve.  

### All Temperature Sensors  
Each of the four THP sensors and the CEAC sensor data are plotted together.  
The four THP sensor labels are from the last four characters of the MAC address of each microprocessor in each THP sensor. At this time, these are not correlated to the physical THP sensor numbers of 1 - 4.  


```{r data_plot_temp}

# TODO this goes above when the data is in final state
# The readings were taken from `r min(finalStats$date)` to `r max(finalStats$date)`. Reading differences for the experimental sensor ranged from a minimum of `r round(min(finalStats$TEMPERATURE), digits = 2)` to a maximum of `r round(max(finalStats$TEMPERATURE), digits = 2)` degrees Celsius.\
# The mean was `r round(mean(finalStats$TEMPERATURE), digits = 2)` degrees.
# 
# Reading differences for the CEAC sensor ranged from a minimum of `r round(min(finalStats$TEMP_THREE_FOOT_HEIGHT), digits = 2)` to a maximum of `r round(max(finalStats$TEMP_THREE_FOOT_HEIGHT), digits = 2)` degrees Celsius.\
# The mean was `r round(mean(finalStats$TEMP_THREE_FOOT_HEIGHT), digits = 2)` degrees.



T4 <- ggplot() +
    geom_line(data = final_THP_log_E8D2, aes(x = date, y = temperature, color = sensor_id)) +
    geom_line(data = final_THP_log_672E, aes(x = date, y = temperature, color = sensor_id)) +
    geom_line(data = final_THP_log_2848, aes(x = date, y = temperature, color = sensor_id)) +
    geom_line(data = final_THP_log_0035, aes(x = date, y = temperature, color = sensor_id)) +
    geom_line(data = final_THP_log_0035, aes(x = date, y = TEMP_THREE_FOOT_HEIGHT, color = "CEAC")) +
    ggtitle("Temperature") +
    xlab("Date (15 minute Averages)") +
    ylab("Temperature (C)") +
    scale_x_datetime(date_labels = ("%b %d %H:%M"),
      date_breaks = "6 hours",  expand = expansion(0)) +
    
    theme(axis.text.x=element_text(angle=60, hjust=1))

```

### All Relative Humidity Sensors


```{r data_plot_all_rh}

#  TODO move back up as text after data is finalized
# The readings were taken from `r min(finalStats$date)` to `r max(finalStats$date)`. Readings from the experimental sensor ranged from a minimum of `r round(min(finalStats$RH), digits = 2)` to a maximum of `r round(max(finalStats$RH), digits = 2)` percent.\
# The mean was `r round(mean(finalStats$RH), digits = 2)` percent.
# 
# Reading for the CEAC sensor ranged from a minimum of `r round(min(finalStats$RH_THREE_FOOT_HEIGHT), digits = 2)` to a maximum of `r round(max(finalStats$RH_THREE_FOOT_HEIGHT), digits = 2)` percent.\
# The mean was `r round(mean(finalStats$RH_THREE_FOOT_HEIGHT), digits = 2)` percent.
        
ggplot() +
    geom_line(data = final_THP_log_E8D2, aes(x = date, y = rh, color = sensor_id)) +
    geom_line(data = final_THP_log_672E, aes(x = date, y = rh, color = sensor_id)) +
    geom_line(data = final_THP_log_2848, aes(x = date, y = rh, color = sensor_id)) +
    geom_line(data = final_THP_log_0035, aes(x = date, y = rh, color = sensor_id)) +
    geom_line(data = final_THP_log_0035, aes(x = date, y = RH_THREE_FOOT_HEIGHT, color = "CEAC")) +
    ggtitle("Relative Humidity All Sensors") +
    xlab("Date (15 minute Averages)") +
    ylab("Relative Humidity (%)") +
      scale_x_datetime(date_labels = ("%b %d %H:%M"),
      date_breaks = "6 hours",  expand = expansion(0)) +
    theme(axis.text.x=element_text(angle=60, hjust=1))


```

# LINEAR REGRESSION

A simple linear regression was performed to compare the CEAC sensor data to the THP sensor data. Graphs, output, and equations are shown below. Residuals assumptions for the linear regressions are also shown.


```{r data_plot_stat_rh}
#| include: true
RH_sensor_plot <- function(RHdata, THPname) {
  RH_plot <- ggplot() +
    geom_line(data = RHdata, aes(x = date, y = rh, color = sensor_id)) +
    geom_line(data = RHdata, aes(x = date, y = RH_THREE_FOOT_HEIGHT, color = "CEAC")) +
    ggtitle(paste("RH CEAC and THP ", THPname)) +
    xlab("Date (15 minute Averages)") +
    ylab("Relative Humidity (%)") +
      scale_x_datetime(date_labels = ("%b %d %H:%M"),
      date_breaks = "6 hours",  expand = expansion(0)) +
    theme(axis.text.x=element_text(angle=60, hjust=1))
  return(RH_plot)
}



RH_lm_plot <- function(RHdata, THPname) {
    RHlm <- ggplot(data = RHdata, aes(x = rh, y = RH_THREE_FOOT_HEIGHT)) +
      stat_poly_line() +
      stat_poly_eq(use_label("eq")) +
      stat_poly_eq(label.y = 0.9) +
      ggtitle(paste("RH Linear Regression - THP ", THPname)) +
      xlab(paste("THP ", THPname, " RH (%)")) +
      ylab("CEAC RH (%)") +
      geom_point()
  return(RHlm)
}


RH_residual_plot <- function(RHdata, THPname) {
    t_model = lm(RH_THREE_FOOT_HEIGHT ~ rh, RHdata)
    summary(t_model)
    modf <- fortify(t_model)
    
      #produce residual vs. fitted plot
    RHlm_residuals <- ggplot(modf, aes(x = .fitted, y = .resid)) + 
      geom_hline(yintercept = 0, linetype = "dashed") +
      ggtitle(paste("RH Residuals - THP ", THPname)) +
      xlab("Fitted") +
      ylab("Residuals") +
      geom_point()
  return(RHlm_residuals)
}

    
RH_qq_plot <- function(RHdata, THPname) {
    t_model = lm(RH_THREE_FOOT_HEIGHT ~ rh, RHdata)
    summary(t_model)
    modf <- fortify(t_model)
    
    RHlm_QQ <-ggplot(modf, aes(sample = .resid)) + 
      stat_qq() +
      ggtitle(paste("RH QQ - THP ", THPname)) +
      stat_qq_line()
  return(RHlm_QQ)
}

RH_E8D2 <- RH_sensor_plot(final_THP_log_E8D2, "E8D2")
RH_672E <- RH_sensor_plot(final_THP_log_672E, "672E")
RH_2848 <- RH_sensor_plot(final_THP_log_2848, "2848")
RH_0035 <- RH_sensor_plot(final_THP_log_0035, "0035")  

RH_lm_E8D2 <- RH_lm_plot(final_THP_log_E8D2, "E8D2")
RH_lm_672E <- RH_lm_plot(final_THP_log_672E, "672E")
RH_lm_2848 <- RH_lm_plot(final_THP_log_2848, "2848")
RH_lm_0035 <- RH_lm_plot(final_THP_log_0035, "0035")  

RH_residuals_E8D2 <- RH_residual_plot(final_THP_log_E8D2, "E8D2")
RH_residuals_672E <- RH_residual_plot(final_THP_log_672E, "672E")
RH_residuals_2848 <- RH_residual_plot(final_THP_log_2848, "2848")
RH_residuals_0035 <- RH_residual_plot(final_THP_log_0035, "0035")
  
RH_qq_E8D2 <- RH_qq_plot(final_THP_log_E8D2, "E8D2")
RH_qq_672E <- RH_qq_plot(final_THP_log_672E, "672E")
RH_qq_2848 <- RH_qq_plot(final_THP_log_2848, "2848")
RH_qq_0035 <- RH_qq_plot(final_THP_log_0035, "0035")

my_plots <- list(RH_E8D2, RH_lm_E8D2, RH_residuals_E8D2, RH_qq_E8D2)
my_layout <- rbind(c(1, 2), c(3, 4))
grid.arrange(grobs = my_plots, layout_matrix = my_layout)

my_plots <- list(RH_672E, RH_lm_672E, RH_residuals_672E, RH_qq_672E)
my_layout <- rbind(c(1, 2), c(3, 4))
grid.arrange(grobs = my_plots, layout_matrix = my_layout)

my_plots <- list(RH_2848, RH_lm_2848, RH_residuals_2848, RH_qq_2848)
my_layout <- rbind(c(1, 2), c(3, 4))
grid.arrange(grobs = my_plots, layout_matrix = my_layout)

my_plots <- list(RH_0035, RH_lm_0035, RH_residuals_0035, RH_qq_0035)
my_layout <- rbind(c(1, 2), c(3, 4))
grid.arrange(grobs = my_plots, layout_matrix = my_layout)


```

## DISCUSSION

The test shows a similar response as previous Biosphere 2 sensor tests. Past comparisons to Biosphere 2 data showed the experimental sensor data mirrored various Biosphere 2 sensor readings in the tropical rain forest biome.

The comparison of the experimental sensor with the CEAC sensor shows similar responses.\
The statistics show a very good fit for the model. This provides a calibration equation that can be used during their future use.

# THP comparison from all 4 sensors

```{r data_plot_rh}

# ggplot(data = finalStats, aes(x = date)) +
#          geom_line(aes(y = rh, color = "THP Sensor")) +
#          geom_line(aes(y = RH_THREE_FOOT_HEIGHT, color = "CEAC Sensor")) +
#          ggtitle("RH CEAC vs THP") +
#          xlab("Date (15 minute Averages)") +
#          ylab("Temperature (C)") +
#          # theme(panel.grid.minor = element_line(color = 2,
#                                         # size = 0.25,
#                                         # linetype = 1)) +
#            scale_x_datetime(date_labels = ("%b %d %H:%M"),
#           date_breaks = "6 hours",  expand = expand_scale(0)) +
#           theme(axis.text.x=element_text(angle=60, hjust=1))


```
