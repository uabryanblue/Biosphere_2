---
title: "Experiment Sensor Data Level 3"
author: "Bryan Blue"
date: "Last Generated: `r Sys.Date()`"

execute:
  echo: false
format: 
  html:
    code-fold: true
    fig-width: 8
    fig-height: 6
  pdf:
    fig-width: 8
    fig-height: 6
---

```{r init}
#| echo: false
#| warning: false

library(here)
library(readr)
library(purrr)
library(dplyr)
library(lubridate)
library(tidyr)
library(ggplot2)
library(patchwork)

source("DL_experiment_logs_functions.R")

# constants to data paths
DATARAW <- "data_raw"
DATACLEAN <- "data_clean"
DATAUSER <- "data_user"
```

## Load Data Logger Data

Many climate and warming device data logs exist. Read them all into a "raw\_" df\
Run unique on each df due to an SD card not erased before being reused.\

### Data Issues

Are all of the logs from a valid start dates?\
There are more MAC address than should be here for the actual experiment. These need identified and removed.\
Warming device data has duplication of 2 MAC addresses. One in the all capital MAC format, and one in the colon version. These need combined or removed.\
TRC has one line that is NA which needs removed.

### Hardware Inventory  
Use MAC address to reference the function of the microprocessor. It appears in logs and should be considered the primary key to the data.  

| ID  | DATE      | DEVICE             | FUNCTION    | MAC               | DESCRIPTION      | Level |
|-----------|-----------|-----------|-----------|-----------|-----------|-----------|
| M01 | 9/24/2023 | ESP8266 NodeMCU V2 | Data Logger | 48:55:19:DF:29:86 | DL1 - TIMESERVER | 1     |
| M02 | 9/24/2023 | ESP8266 NodeMCU V2 | Data Logger | 8C:AA:B5:4D:7F:18 | DL2              | 1     |
| M05 | 9/25/2033 | ESP8266 NodeMCU V2 | Climate Sensor  | 48:e7:29:53:67:2e | THP2             | 2     |
| M08 | 9/25/2023 | ESP8266 NodeMCU V2 | Warming Device Control  | 48:e7:29:55:52:ad | TRC              | 2     |
| M04 | 9/25/2023 | ESP8266 NodeMCU V2 | Climate Sensor  | 48:55:19:df:28:48 | THP3             | 3     |
| M09 | 9/24/2023 | ESP8266 NodeMCU V2 | Warming Device Control  | 48:e7:29:53:7e:2c | TRC              | 3     |

: Hardware Inventory

```{r dl_log_loading}
#| echo: false
#| warning: false

# create mapping of MAC to function
# MAC address are convered from : notation to character string without delimeters
MACmap <- data.frame(matrix(ncol = 5, nrow = 0))
colnames(MACmap) <- c('MAC', 'role', 'name', 'level', 'notes')
MACmap[nrow(MACmap) + 1,] = c("485519DF2986", "data logger", "DL1", "1", "TIMESERVER")
MACmap[nrow(MACmap) + 1,] = c("8CAAB54D7F18", "data logger", "DL2", "1", "Backup")
MACmap[nrow(MACmap) + 1,] = c("48E72953672E", "Climate Sensor", "THP2", "2", "")
MACmap[nrow(MACmap) + 1,] = c("485519DF2848", "Climate Sensor", "THP3", "3", "")
MACmap[nrow(MACmap) + 1,] = c("48E7295552AD", "Warming Device Control", "TRC", "2", "")
MACmap[nrow(MACmap) + 1,] = c("48E729537E2C", "Warming Device Control", "TRC", "3", "")


# read in all climate and TRC data
# run unique as there is overlap when an SD card was not erased before reuse
raw_climate_dl_data <- read_climate_log_data()
raw_TRC_dl_data <- read_TRC_log_data()

# remove seconds from date/time fields, only precision to minutes
# raw_climate_dl_data$sensor_datetime <- format(as.POSIXct(raw_climate_dl_data$sensor_datetime), "%d-%m-%Y %H:%M:00")
# raw_climate_dl_data$DL_datetime <- format(as.POSIXct(raw_climate_dl_data$DL_datetime), "%d-%m-%Y %H:%M:00")

raw_climate_dl_data$DL_datetime <- format(as.POSIXct(raw_climate_dl_data$DL_datetime), "%Y-%m-%d %H:%M:00")
raw_climate_dl_data$sensor_datetime <- format(as.POSIXct(raw_climate_dl_data$sensor_datetime), "%Y-%m-%d %H:%M:00")

raw_climate_dl_data$DL_datetime <- as.POSIXct(raw_climate_dl_data$DL_datetime)
raw_climate_dl_data$sensor_datetime <- as.POSIXct(raw_climate_dl_data$sensor_datetime)

raw_TRC_dl_data$DL_datetime <- format(as.POSIXct(raw_TRC_dl_data$DL_datetime), "%Y-%m-%d %H:%M:00")
raw_TRC_dl_data$sensor_datetime <- as.POSIXct(format(as.POSIXct(raw_TRC_dl_data$sensor_datetime), "%Y-%m-%d %H:%M:00"))

raw_TRC_dl_data$DL_datetime <- as.POSIXct(raw_TRC_dl_data$DL_datetime)
raw_TRC_dl_data$sensor_datetime <- as.POSIXct(raw_TRC_dl_data$sensor_datetime)

climate_dl_data <- raw_climate_dl_data %>% distinct(DL_datetime, sensor_datetime, sensor_MAC, .keep_all=TRUE)
TRC_dl_data <- raw_TRC_dl_data %>% distinct(DL_datetime, sensor_datetime, sensor_MAC, .keep_all=TRUE)

# list out the unique MAC addresses found in all the logs
climateMAC <- unique(raw_climate_dl_data$sensor_MAC)
print("Found Climate MAC addresses:")
print(paste(climateMAC, collapse=", "))

print("Using Climate MAC addresses: ")
print(MACmap[MACmap$role == "Climate Sensor",]$MAC)

# list out the unique MAC addresses found in all the logs
TRCMAC <- unique(raw_TRC_dl_data$sensor_MAC)
print("Found Warming Device MAC addresses:")
print(paste(TRCMAC, collapse=", "))

print("Using Warming Device MAC addresses: ")
print(MACmap[MACmap$role == "Warming Device Control",]$MAC)

# filter out anything except the MAC addresses in use for this analysis
TRC_dl_data<- TRC_dl_data %>% 
  dplyr::filter(TRC_dl_data$sensor_MAC %in% MACmap[MACmap$role == "Warming Device Control",]$MAC)
climate_dl_data <- climate_dl_data %>% 
  dplyr::filter(climate_dl_data$sensor_MAC %in% MACmap[MACmap$role == "Climate Sensor",]$MAC)

#c("48E7295552AD", "48E729537E2C")) 
# MACmap[MACmap$`function` == "TRC Warming Device Control",]$MAC
# TRC_dl_data_48E729537E2C <- TRC_dl_data %>% dplyr::filter(sensor_MAC == "48E729537E2C") 
# TRC_dl_data_48E7295552AD <- TRC_dl_data %>% dplyr::filter(sensor_MAC == "48E7295552AD") 
# TRC_dl_data_48E72953672E <- TRC_dl_data %>% dplyr::filter(sensor_MAC == "48E72953672E") 
# TRC_dl_data_48E7295348F8 <- TRC_dl_data %>% dplyr::filter(sensor_MAC == "48E7295348F8") 

# These colon version of the MAC address also appear as the all capital version above
# TODO why did this happen? It is a software version difference.
# TODO only 3 MAC addresses are valid, the fourth would be testing
# TRC_dl_data_48E7295348F8_2 <- TRC_dl_data %>% dplyr::filter(sensor_MAC == "48:e7:29:53:48:f8") 
# TRC_dl_data_48E7295552AD_2 <- TRC_dl_data %>% dplyr::filter(sensor_MAC == "48:e7:29:55:52:ad") 


```

```{r plot_functions}
#| echo: false
#| warning: false

plot_MAC_date_range <- function(df, plotvar, plcolor, title = "") {
  
  plotT <- ggplot() +
    # geom_point(data = final_data, 
    geom_line(data = df, 
              aes(x = DL_datetime, y = .data[[plotvar]], color = plotvar), 
              size = 1) +
    ggtitle(title) +
    xlab("Day of Month") +
    ylab(plotvar) +
    # scale_color_manual(name='MAC',
    #                    breaks=c('Treatment', 'Control', 'Reference'),
    #                    values=c('Treatment'='#F8766D', 'Control'='#619CFF', 'Reference'='#00BA38'))+
    # scale_y_continuous(limits=c(0.0, 0.2), breaks=c(0, 0.1, 0.2, 0.5))   +
    scale_x_datetime(date_labels = ("%d"),
                     date_breaks = "days", 
                     expand = expansion(0)) +
    theme(axis.text.x=element_text(angle = 60, hjust = 1))
  
  return(plotT)
}

# TESTING start --------------------
# pmac <- "48E72953672E"
# pdata <- MACmap %>% 
#   filter(MAC == pmac) %>% 
#   select(role, name, level)
# 
# d.begin <- "2023-12-01 00:00:00"
# d.end <-"2024-01-01 00:00:00"
# title_begin <- format.Date(d.begin, "%D")
# title_end <- format.Date(d.end, "%D")
# 
# title1 <- paste("Temperature for", pdata$role, "level", pdata$level, sep = " ")
# Ttitle <- paste(title1, "\n", title_begin, "-", title_end, sep = " ")
# 
# p1 <- plot_MAC_date_range(climate_dl_data %>% 
#                            filter(DL_datetime >= as.POSIXct(d.begin) & 
#                                     DL_datetime <= as.POSIXct(d.end) &
#                                     sensor_MAC == pmac), "temp_C", "#619CFF", Ttitle)
# 
# p1

# TESTING stop --------------------

```


```{r climate_graph_report_MAC}
#| echo: false
#| warning: false

# GLOBAL SENSOR IDENTIFICATION FOR MONTLY GRAPHS
# common values for the following monthly graphs
# to run monthly graphs on a different sensor, change the MAC address
# pmac <- "48E72953672E" # level 2 aspriated climate sensor
pmac <- "485519DF2848" # level 3 aspriated climate sensor

```

# Climate Data
**The experiment started on December 12, 2023.**  

Data from the experimental aspirated temperature, humidity, and pressure sensor.  

## Level 3 Installation
This plant is located on level 3 the mountain top. It grows in a basin, surrounded by ~1.8 m walls, in the SE corner.  

Graphs are created using the MAC address for the climate sensor. Change the MAC address to the climate sensor of interest to see it's data.  
MAC: `r pmac`

```{r climate_graph_functions}
#| echo: false
#| warning: false

plot_climate_temperature <- function(pmac, d.begin, d.end) {
  
  pdata <- MACmap %>% 
    filter(MAC == pmac) %>% 
    select(role, name, level)
  
  title_begin <- format.Date(d.begin, "%D")
  title_end <- format.Date(d.end, "%D")
  
  title1 <- paste("Temperature for", pdata$role, "level", pdata$level, sep = " ")
  Ttitle <- paste(title1, "\n", title_begin, "-", title_end, sep = " ")
  
  p0 <- plot_MAC_date_range(climate_dl_data %>% 
                              filter(DL_datetime >= as.POSIXct(d.begin) & 
                                       DL_datetime <= as.POSIXct(d.end) &
                                       sensor_MAC == pmac), "temp_C", "#619CFF", Ttitle)
  return(p0)
}


```

### December 2023 Temperature Data

```{r december_2023_climate_graphs}
#| echo: false
#| warning: false

d.begin <- "2023-12-12 00:00:00"
d.end <-"2023-12-31 00:00:00"

p <- plot_climate_temperature(pmac, d.begin, d.end)
p

```  
### January 2024 Temperature Data

```{r January_2024_climate_graphs}
#| echo: false
#| warning: false

d.begin <- "2024-01-01 00:00:00"
d.end <-"2024-01-31 00:00:00"

p <- plot_climate_temperature(pmac, d.begin, d.end)
p
```

### February 2024 Temperature Data
```{r February_2024_climate_graphs}
#| echo: false
#| warning: false

d.begin <- "2024-02-01 00:00:00"
d.end <-"2024-02-29 00:00:00"

p <- plot_climate_temperature(pmac, d.begin, d.end)
p
```

### March 2024 Temperature Data
```{r march_2024_climate_graphs}
#| echo: false
#| warning: false

d.begin <- "2024-03-01 00:00:00"
d.end <-"2024-03-31 00:00:00"

p <- plot_climate_temperature(pmac, d.begin, d.end)
p

# p1/p2/p3/p4
```

```{r warming_intit}
#| echo: false
#| warning: false

# change MAC address to see plots of other TRC devices
# pmac <- "48E7295552AD" # level 2
pmac <- "48E729537E2C" # level 3

pdata <- MACmap %>% 
  filter(MAC == pmac) %>% 
  select(role, name, level)
```

# Experimental Warming Device  
**The installation was not operational until December 13th, 2023.** 

Data from the warming device's five thermocouples placed on:  
warmed leaf and it's controlled warming pad  
non-warmed leaf with the warming pad that is not controlled  
reference leaf with nothing attached other than the thermocouple   
  
This installation was not as secure as the level 2 installation. Thermocouples would randomly move and not touch their respective leaf. This caused inaccurate warming control. At one point the sensor on the reference leaf was not touching the leaf and the warming pad heated too high, scortching the warmed leaf.  


```{r plot_TRC}
#| echo: false
#| warning: false

plot_treatment_vs_reference <- function(pmac, d.begin, d.end) {
  
  title_begin <- format.Date(d.begin, "%D")
  title_end <- format.Date(d.end, "%D")
  
  Treatment <- TRC_dl_data %>% 
    filter(DL_datetime >= as.POSIXct(d.begin) & 
             DL_datetime <= as.POSIXct(d.end) &
             sensor_MAC == pmac) %>%
    select(DL_datetime, T1)
  
  Reference <- TRC_dl_data %>% 
    filter(DL_datetime >= as.POSIXct(d.begin) & 
             DL_datetime <= as.POSIXct(d.end) &
             sensor_MAC == pmac) %>%
    select(T3)
  tdiff <- cbind(Treatment, Reference)
  tdiff$diff <- tdiff$T1 - tdiff$T3
  
  tdiff_mean <- round(mean(tdiff$diff, na.rm = TRUE), 1)
  tdiff_sd <- round(sd(tdiff$diff, na.rm = TRUE), 1)
  tdiff_median <- round(median(tdiff$diff, na.rm = TRUE), 1)
  
  title1 <- paste("Temperature Difference between Treatment and Reference for level", pdata$level,sep = " ")
  title2 <- paste(title_begin, "-", title_end)
  title3 <- paste("Mean: ", tdiff_mean,  ", Median: ", tdiff_median, ", SD: ", tdiff_sd, sep = "")
  Ttitle <- paste(title1, title2, title3, sep = "\n")
  
  plotdiff <- ggplot() +
    geom_line(data = tdiff, 
              aes(x = DL_datetime, y = diff, color = "Delta T"), 
              size = 1) +
    geom_line(data = tdiff, 
              aes(x = DL_datetime, y = T1, color = "Treatment"), 
              size = 1) +
    geom_line(data = tdiff, 
              aes(x = DL_datetime, y = T3, color = "Reference"), 
              size = 1) +
    ggtitle(Ttitle) +
    xlab("Day of Month") +
    ylab("Temperature Difference (C)") +
    scale_color_manual(name='Thermocouple',
                       breaks=c('Delta T', 'Treatment', 'Reference'),
                       values=c('Delta T'='#619CFF', 'Treatment'='#F8766D', 'Reference'='#00BA38'))+
    # scale_y_continuous(limits=c(0.0, 0.2), breaks=c(0, 0.1, 0.2, 0.5))   +
    scale_x_datetime(date_labels = ("%d"),
                     date_breaks = "days", 
                     expand = expansion(0)) +
    theme(axis.text.x=element_text(angle = 60, hjust = 1))
  
  return(plotdiff)
  
}

# TESTING begin -------------
# change MAC address to see plots of other TRC devices
# pmac <- "48E7295552AD" # level 2
pmac <- "48E729537E2C" # level 3
# 
# pdata <- MACmap %>% 
#   filter(MAC == pmac) %>% 
#   select(role, name, level)
# 
# d.begin <- "2024-03-01 00:00:00"
# d.end <- "2024-04-01 00:00:00"
# 
# plotdiff <- plot_treatment_vs_reference(pmac, d.begin, d.end)
# plotdiff
# TESTING end -------------

```

### December 2023 DeltaT Data  
**The experiment started on December 12, 2023.**  

It is unknown why the device was not operating around December 15th. It was hard reset and it continued to run without trouble.  
```{r December_2023_deltaT_graphs}
#| echo: false
#| warning: false

d.begin <- "2023-12-12 00:00:00"
d.end <- "2023-12-31 00:00:00"

plotdiff <- plot_treatment_vs_reference(pmac, d.begin, d.end)
plotdiff

# this needs modified so the filename is dynamic
# ggsave(here("figures", "deltaT_lvl2_december_2023.jpg"), plot = last_plot(), width = 8, height = 6)

```
### January 2024 DeltaT Data
```{r January_2024_deltaT_graphs}
#| echo: false
#| warning: false

d.begin <- "2024-01-01 00:00:00"
d.end <- "2024-01-31 00:00:00"

plotdiff <- plot_treatment_vs_reference(pmac, d.begin, d.end)
plotdiff

# ggsave(here("figures", "deltaT_lvl2_january_2024.jpg"), plot = last_plot(), width = 8, height = 6)

```
### February 2024 DeltaT Data
```{r February_2024_deltaT_graphs}
#| echo: false
#| warning: false

d.begin <- "2024-02-01 00:00:00"
d.end <- "2024-02-29 00:00:00"

plotdiff <- plot_treatment_vs_reference(pmac, d.begin, d.end)
plotdiff

# ggsave(here("figures", "deltaT_lvl2_february_2024.jpg"), plot = last_plot(), width = 8, height = 6)

```

### March 2024 DeltaT Data
```{r March_2024_deltaT_graphs}
#| echo: false
#| warning: false

d.begin <- "2024-03-01 00:00:00"
d.end <- "2024-03-31 00:00:00"

plotdiff <- plot_treatment_vs_reference(pmac, d.begin, d.end)
plotdiff

# ggsave(here("figures", "deltaT_lvl2_march_2024.jpg"), plot = last_plot(), width = 8, height = 6)

```

# Leaf Warming All Data  
**The experiment did not start until December 12, 2023.**  

Plots and information on all thermocouples.  
  
The warming pad shows that the temperatures reached well above the desired values. A safety cutoff of 50 C was present in the software and it looks as though it hit this value.  
  
The warming pad that was not controlled shows a large variance of temperatures even though it was never plugged in with an average above the leaf temperatures.  

The leaf temperatures show very similar values. The treatment leaf should show a higher temperature even if the thermocouple was not attached to the leaf as it was still positioned above the heating pad.  

```{r boxplot_all_TC}
#| echo: false
#| warning: false

d.begin <- "2023-12-12 00:00:00"
d.end <-"2024-03-01 00:00:00"
title_begin <- format.Date(d.begin, "%D")
title_end <- format.Date(d.end, "%D")

# change MAC address to see plots of other TRC devices
# pmac <- "48E7295552AD" # level 2
pmac <- "48E729537E2C" # level 3

pdata <- MACmap %>% 
  filter(MAC == pmac) %>% 
  select(role, name, level)

TCdata <- TRC_dl_data %>% 
  filter(DL_datetime >= as.POSIXct(d.begin) & 
           DL_datetime <= as.POSIXct(d.end) &
           sensor_MAC == pmac) 

# the TC names need to be in one row for this plot
long <- TCdata %>% 
  pivot_longer(
    cols = starts_with("T") , 
    names_to = "Thermocouple",
    # values_to = "value"
)

title1 <- paste("Thermocouple Values for level", pdata$level, sep = " ")
Ttitle <- paste(title1, "\n", title_begin, "-", title_end, sep = " ")

p <- ggplot() +
  geom_boxplot(data = long, 
               aes(x = Thermocouple , y = value, color = Thermocouple),
               outlier.color = "red", outlier.size = 1) +
  # scale_fill_discrete(labels=c('Treatment', 'Control', "Reference", "Heated Pad", "Non-Heated Pad"))+
  # scale_color_manual(name='Thermocouple',
                     # breaks=c('T1', 'T2', 'T3', 'T4', 'T5'),
                     # values=c('T1'='#F8766D', 'T2'='#619CFF', 'T3'='#00BA38', 'T4'='red', 'T5'='blue'))+
  scale_colour_manual(
  values = c('#F8766D', '#619CFF', '#00BA38', 'red', 'blue'),
  breaks=c('T1', 'T2', 'T3', 'T4', 'T5'),
  labels = c('Treatment', 'Control', "Reference", "Heated Pad", "Non-Heated Pad"))+
  scale_y_continuous(limits=c(20.0, 50.0), breaks=c(20, 30, 40, 50)) +
  ggtitle(Ttitle) +
  xlab("TC Number") +
  ylab("Temperature (C)")

ggsave(here("figures", "TC_boxplot_lvl3_dec_12-2023_mar_3-2024.jpg"), plot = last_plot(), width = 8, height = 6)

 p
 
 

```